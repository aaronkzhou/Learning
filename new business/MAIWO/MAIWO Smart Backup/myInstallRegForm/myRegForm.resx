<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PictureBox1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAACT4SURBVHhe7Z0HfFX1+f9xMyoKirhoURxYtbW2Wv9FbWutWqy2Wlv+KiioyEaQnbATSCBAWGGE
        EUaAhE0IYYYVICEQZlhhj7D33p/f933wi5eQkJuQcSH3vl7P6yb3nnPuOef5PJ9nfJ/v9xSS91Wg70Ch
        An313ouXFwAFHAReAHgBUMDvQAG/fC8DeAFQwO9AAb98LwN4AVDA70ABv3wvA3gBUMDvQAG/fC8DeAFQ
        wO9AAb98LwN4AVDA70ABv3wvA3gBUMDvQAG/fC8DeAFQwO9AAb98j2GAhIQE9enTR40bN3be+d/7yv07
        4BEAGD9+vHr27KmxY8dq+vTpCgsLk7+/v/jc+8rdO5DvAMDSe/TooU2bNunMmTNavXq1Ro0apQEDBqhl
        y5ZeJshd/ed+T2BG1H7x4kWdPn1a3bp10+jRo52/eZ08eVKhoaEKDg5W69atHXfgfeXeHchVBsiI2qF4
        voPm69evrylTpmjVqlWO8hcuXKiuXbs637Vv316NGjXS2bNnc+8OFPAj5xoAMqP2d999Vw8++KA+++wz
        RUZGasyYMY7ld+/e3WEF3EKXLl1Ut25dzZgxQ0ePHi3gqsqdy881AEDdN6L2ypUr64svvpCPj4+6DRmj
        8IXrNGx+sgbPXqnQmUnqE5OgNj0GqEKFCvrkk0/UqlUrhxH69++vZcuW5c7dKIBHzTUAkM7diNobNmzo
        BH74ftxBl/AoBceuV8DCveoyI1kdBo1Rx44dHZCEhIQ4wWFiYqKGDx/ufL58+fICqK6cv+RcAwAMcCNq
        TxvcpRcsAo5OnTpp5cqVzpXv37/fyQ46d+7suAjv6+bvQK4BAIX27dvXCermzZunmTNnOoxgg7/o6Gjt
        2LFD+/bt06FDh3T8+HGdO3dOZAeuL2g/Pj5ee/bs0YIFCxQYGKgOHTqoWbNmN3/13iPkfBpIxI5Cd+7c
        6RR0+vXrp5iYGC1evFgTJkxwAjyCOwo+ixYtUnJysuMKNm/e7LwDir179zpBH8cCRFFRUU48gf8nUIQ9
        evfurbMXLmlp6qmrsv7AGa9Ks3gHcoQBLl++rGPHjjnKQ5FbtmzR1q1btW3bNkfpderUcaRGjRqOBaM8
        qHzcuHGOdaP47du3O9uzH/tznHWbtihs1jJ90HmK3gyO0wudE/VMQLzua52oQq2SbiivhKzV2wM3qP6U
        HRq49ICS912pM3hf196BmwKAVTzKs0rnb6x/165dSk1N1dq1a0XEX6RIEX388ccKCAiQn5+f49sHDx6s
        OXPmOMpmW4T92N8CguOu37hZPhNWqpjvfN3hE687Wi7RHa2TjCzLkpQKXKn/RmzR8BWHdODkBS8WzB3I
        NgAI0KzisVysH+Xt3r3b8dfQOLJhwwYHAIULF9aHH37oVPd8fX0dJiCiJ1awsYDdh/05jisYYIaE5I36
        36BE3dFsru7wTTDKX6o72hgQZFP+PnSjesTvU+qxcwUWDFkGAFZPNI7VohRr8VivVTyBHdsggOObb75x
        GOCjjz5ycnmE2GDWrFnauHGjA5QDBw44wj7sz2euQAAkHIvfHRG3Vg/7xurO5gt0Z6slutMA4M42y29K
        /hi6QR3m7dHGgwWr6pglAFy4cMGhZ2gZZfC3q+JRHko8ePCgE8TBEmxTrVo1hwFwAVT6COKo/JHXY+Vs
        T+CI8DfiCgZXIFjWmb8yRS93nK07m87RnS0XG+Un6c62BgQ5IM/3Wqs2c3Yrafep254Z3AbA+fPnHWvH
        6i3dW4t3VTxKRPmABQBMmjRJNWvWdALAqlWrqmmz5grs1EURERFOiggA2Ofw4cNXxRUMaYEA4CwbrEnZ
        pIq943RX41m6q2WC7jJMcFe7FTkqZYPXqPH0VMVuOX5bgsEtAKBMLN5avfXzULW1eKs0m76R0w8bFu6k
        fCNGjHBSOdK4Nm3aiCpgrz79FJ+Q6BwTALkCwP6dHhBwDfw+zMK+Gzdv0cch83V34xm6u2W87jYMcHf7
        lbkipYOS9V3UDk1JOaZzFy/dFoDIFACXLl26anHcdG4+SkBprtRtlUZB58SJE5o4OUZBQUFOCRdFLlmy
        REOGDHHKuhRxCAanx853jg2zpAeAjIAA8GAf2IP9UzZv1VudZxkQTNc9rRJ0j2GBe/xW5aqU7JSsSmO3
        aeK6ozpx7tri1a2EjEwBwI22lm8p39Xq0yruyJEj2rN3n9q2bedE+YDk1KlTDmDI/0n/WrRo4bAAscDs
        hUlOpgC13wgEfGdjBH7fBorWJazYsFlPtZike5rM1L2mTnCv30rd6786T6RYx2R9GrlNQ1Yc1oFTt1Z6
        eUMAUNwh4MPKbLCX1t9bmrbKQTGTZy5whnEp+xLosU9sbKxTA8AFMLLH9/wfEhbp9AKQDbgeK6O/bZBo
        swVAaUEwLn6dCteO1L3NYnVf26W6z3+V7uuwOs/lHyO2qFfiAaUeP+/xZJAhAPD7Ns1zR/koDOXjJnoO
        HuM0cgwbNkzh4eGO5TOAQ+6PW0DxfM97k7ZBjnsABO4AwDVTcE0ZOUd+u3rYfN1Xb5zu841TYb/lKmys
        Mz/lzbDNClywXxsPeWZ6mSEAbA6Pn8XK0gv40iqM7SjrBoVGOP18nQaOUtjcVRoYu0L9ZyQpJGaxekQt
        lG+3fqreuI0DgAatg5xBHsb43QWABQHvrlkCIFi9cZtK1Rumwo2nqHDbBBXpuEpFAtd4hLzcf6P84vZp
        2R7PKUunCwBSPqzfBn3uKN8ywJo1azRq0gzH2gn2AoaMV9DMNfKP26PAqavUtv8ovVk3QIW+HaJXagar
        oX+IZs+e7QwKZQUAaesGANYGhm0nLFHhWuEq4jNHRTssV1EDgKKd1nqUlAtJUbPYvZqz7WS+uol0AcDN
        JTLHotKL+G+kKACwdOlSNfLvrs9a9lL5hn31UYN2qlG3vj5q2F7lmw1SoeZTVKjeaBX5brDCx03WtGnT
        nApfdgDgCgQLgvVbt+uhmqEq8uMkFTUsUCwwWcU6r/NY+WWvFNWaultTN50w6eXlPAXEdQCg1Gtr+64p
        n438bRCW0TsRPQWeMVNm6LEWY1XId5oK+c1VoYAFV6TDfBVqPVN3NpmkJv0naPLkyZo/f/7VCmBmx3f9
        Pm0AyjkCWIBbLTRWRWoNNwNIc/SLjiv0CwOAXwSt93h5rEeKKk/apagUk06fy/1aw3UAoDMXAKTn+91V
        TlJSkhP1j5w8U68Fz1ShjnEq1GnRFTEgeCxwltoMjdLEiROdApEtB7t7fLtdWsbgc8sCM5alqEi1PirW
        ZIp+4b9U93dZr/u7ptxSUjI4RZUmpmr46mM6cDp3ag3XAYCbSNqXHeu3isEKGeenEYTOn8Hjp6j+sOmq
        PWS6Oo6MdvoAmAWE9eNqsqp4VwCkLSFbFti1K1VP1OqrYvUjdX/bRSoetFbFu228peXjsbvUZ9kR7T6R
        c7WG6wBg0ykA4Br8ZUdJNG7CBNQDUDoDQHT2YPXQPsfPznHTViApPlGChr0Yf7AsUGNQrIrVGKz7zchh
        8U6r9YABwAPBm24LeWfkTvVaekQHb5IZrgEA/j9t9G8LP3a4NjvvMAp5/ooVK5yCT3aOkXYf1xFHaha8
        aCHDfeGCyGAi55kmkmq9VbxptB4MSFIJQ6klemy+raSkuZ4vovZo3o7spZbXAID0Lz3/nxMKy4ljoHTG
        GlA0YxS8cAHr1693GGXq1KlOUYn/AduKNSbyrxyk4g3G6EH/BJUM3qCSPbfctvLe6FTN2Z41IFwDANvl
        k7bylxPKy+4xoHfGEgAnL0YZOT9STRROx/G6deucFNK++J6GU1LLsrVDVLzOUJVoN18lu63VQ7235puU
        H5KaJ79dZco+7TvlXtB4DQC40bbub/P/7Couu/th5YxBuFo5/p30Mi4uzgksGV+A4jOaMwgYAAYBZsUO
        ESr+fahKtIrVQ13X6OHe2/RwyPYcl0f77dBrEfv1XtRRfRl7SvUTzqnNqksyNSiZGpSC1kn+yVJX897F
        iMlK1W71ZTVcfE6VZ5/SPyYf1euR+8VxcuL8yobuUPTmzBtargEAw7jcNNcU0LZ25eY7CiOAs1bOO0Eo
        vhwrp3GU5lLA4c4LwFBdhAlqhkxU8W9DVLLFVD0ctFKPhGzTI3125IiUHZiqd6OO6Ot5p9V8+SU1WXZJ
        jZIuqaGReksuqVbiJX2/+JJqpBE+q/7TZ3XMNg2WXlJjs09TcwzfFZf0zfwzes8AouzA3Td9nqErb9zI
        ch0D5AUAYAesnPUArC/Ht2PljAswgYR5BLBRdmYGc3zYAiC3GTJZD1TrrpLNJqlU52UqHbJVpfvtvCl5
        ecR+/WfGSdVfclG1F19QHSM1Ey6olpHai/nsitTJRFy35Tgco0Y8x7iguokX9OPSi6o066R+Y37vZs65
        x7JjGdrNNQBAIbkFAGvl+HBeRO5YOakipWDSRawc5d3si0wG9uBagk3d4YGvuqhkozEqFbjEAGCLHu2/
        K1vydNgefTL9hL5beM7IWX2/6Jxqx59THUP3OS0ct4Y5fg3zXsvIZzNPqNyQPdk6b643Zmv6weE1ALCt
        XznhAlCkbQy1Vo6LSUlJcUrFFIiwcrIOgJeTL7qQyARIOXtHGAao0kklG4zUI4EJerTPZj02IDXL8tqY
        Q6o855S+MPJd3GnVXnhGdRflvtQxv/H9gtOqatxM1Xmn9MbYQ1k+d673hWG7dfTs9aXlawDAvDzXhk/X
        9m53YoD0rJwROiZ3MhWMNnAGizgWNYfcehEAOkPDBgghkaYGULmTHvohXKXNrKLHQzbriYF7siR/Mjf9
        sxkn9Kmx/u/nnVTdBSdVb8GpPBN+r2bcSVUyLFBp1gm9Oe5wls7fXq/vwutdwXWVQKJr2+5NJgAIMhIU
        adM0O6mTYA7LIw3Dypn4QVeRXQImt5Ruj4uLoRMZ9iEOCI6IMQAI1MMNwvVoYLye6LtFTw7e67a8Pvqg
        Ppxy1ARlR/T5jGOqPf+46sblg5jfrRp7TB9EH9HHMUf1xpiDbl+Dvd5yQ/fqWJoBpgzHAmwtIK3yicSh
        cm40VoziAQqVPlbyYBYwY/vsZ6k/t5Xuenz8PqAjqGSsod3wGJWocgUAj3VK0JP9tqpM2D635Jlh+/Tu
        xIP687gDemf8Af1v6iHVmnNEdecezXOpY37z65mH9Z45n7+Y83l/0kE9a87P3Wux203adG3/wXUAwFKx
        WNc4IK2VUy+gyMKADzeZd/7n8/x+kUVYBoMJ6oZGq+TXQSrVaJQeD0pUmQHb9cuh+92SP4zapz9F7HGk
        gpH3xu1VlakHVHPWIdWJNTL7kOrmonB8R8xvfTfzoP4dtV9vRf58Pq9H7nPrOlyvt61pT7v4UxUVXV0H
        AHJwrBkAYMVYOZbM31g2Vo6wDZafH1aeEchILTk3GIpKIYNO/+oUqYeqdVXppmP0ZLdl+tXAnSo77IBb
        8vqIVL02fOdV+WP4Tr01apcqjtutz6P36ttp+1Rjxn7VNFJ75hWpM+vmxB6HY3LsalP36b9Re/WuKfP+
        vxG79LrL+bwxMtWt63C93u+jt+v4yZ8N9ToAQOko2qaDpFPcSHw6vt0TrDwjAJBVkEoCAGoJsFP5uj31
        cPWeesw3SmV6rlbZsN16KvyQW/LKkG367eCt18kr5rNXzXevD92mCuHb9beIHfrnmJ36dPwufT4pVVWi
        d6vqlD36JmaPvpt6RaqnEfs527At+7Avx+BYHJNj8xu/C9sqfjPtuXB+7l6L3a5SxFpt2bHr6i1MtyUM
        y2ZQBVdAjm5H2/Kb3m/0+8Qm1BIIQgEBAAidMFMPfemnR2r10xPtZuhXIev1lPGbT4847Ja8MHCbfh26
        KVN50WyDvDRgk15GBm7WK4M269XBV+QPYVv0WhrhM/s927IP+3IMe7xMf3vQNreuw/V6Kw5apkVJK3T6
        zJUu5XQBQPWNYI4cnYDKrtHjqQAAoFA/HckAANAyZlBnQIwe/ipApX8IU5mAOD0VukXlRhxSuZFH3JJn
        B+/SswY0nirPDd7p1nXY630+4qjeCp6jiTNm6/DRKylhhl3BuAHyaWIBhlp599QXbgrGIjPBDVBzmDJ1
        msrX6a5Hvu2qx5uNVtnuSaaSlqpnRx3Rs+ZGuCPPjTyssj3Xmn2TPU/MeXF+7lyH3eavk47qed9xGmYa
        cfceuDKukuG8APJofD/BHlU1/Clj7572Apjk+8QmMBbMBQD8I2er1Jft9WitPirTbqqe7rtOz4bv13OR
        x7Ik5M5PdFmpJ4JWeI6Y83nGlIWzci0vjTmuN4Zv16+bjdTAiPHaZabv3RAAuAGon949Bmn4G2qFYj3l
        RWYCSKk2cl6MAFJtnDZjpl5pFKJHqnXW442Gq2zQQj0Ttl3PRx7R8+ZGZFWeNiAoHbhMj5iuovwWzoPz
        yco1lB973AxeHVexdol6o8kADRk7Sbv3XRlzyZAByAYIrFA6NxnrYuAG35oTAzY3CyKUDiuR81O7wE0B
        AALBZuGxKlXZz1h/iMq0iVa5Psl6zoyolR9zQuXHnsyWPBN+UI90XqmSfon5Jvw+55HVa/jn9FN6yriM
        e3wX6b8tumn8tFgdPHL0xgDgW24sgZXt4AUE1PIBBGlifryoO1Djt/V+zpEUlf/pGxg+zbSdf+Wv0t92
        0ZNNRuipLov0XNgOlR99TC+MO3VzYsBTpt82Pdg+UcXbxOeZ8HtP9t2qF8zvZ/Ua3pl62qSTOxzlP9Qs
        Wo07dNX8xKQbZwFWsbAAsQDz9ujopY+fWgBVP0b0yBDysi5Afo+SCfTsSCN/EwPAALFz5+n1ZqEqXTVA
        T9QfoLJ+0/Vs//UqP+qgfm2U/+vxp3NEsMAy/bfrATPfoGjLBbkmHJ/f4feyc+4VZ5zRvyYfdJSPVGjY
        Q90GDlOKmTllq4GZrg9ALEBdACsDBLR421o/jZfQMDFCblYEqU7CPPwWv83wMW6IEjTnRfkXAHwZPFZP
        VfPTcz/00XNtJ+rZ3stVfsReo/wTenHimVyRcoaSHzMjjA8GLNd9LczM5JsUjsPxOO7NnPP/5p5TxfF7
        dW+reEf5pZpGqW7rjoo2i3LYFPCGMYArC9jZQlgf7oAefyjX1tyxQlq3aM7MTgdPRq6EY6F44g5Ku4xJ
        kOrRU8BvwkAAADb6j3+47vprLd39j8Yq+U0vvdgpVn8bs0NvRx/X7yef0UuTzua6vDjhtJ4xdYYyph+v
        dM8UlTJNqPf7LclQ+J7t2J792P9mz/P30WdNs8p5/XnUzquWX7jFXP2rgZ96ho3UerOayvmf2ujdAgAb
        4QoYXSMewNIAAExALEB2QDRuu3sYgEE5BGm2+ycrsYKNO1Aq1TwCT9JPjkW/Af+T89MYCgBggf8FjHSU
        f9f7P+quT/10d9VQ3V1vooq1jFP5AVv0/pQT+ni2uSnTzuuVyef0ctTtKRVjz+vHxWfFNHRL+/f4LFSF
        el3UuluI4/tdxwHcBgAbQsO2Bx/KBQQsA0tcgPUDBLveH3ECfpl+ANIyvqNNC9rGigET74CGzwnqcCds
        y7FQMscCDFT5+F2YgFiEog9sAADi4xMU0KOPyv2tkoq+V0d3fdJed3/dT3fXHWeWipmle3wWXL0Rj3ZZ
        rQqj96rS3LP615zzesuA4TcGDLeDVJh6XnVNH+FXZri4RIelV6/5Xt8F+mP9YDUNCHaof/+h6+s4mcYA
        rtYLCEgNKQxheSgYEGD1sAEWi2LIFrBWAjUUCSBQKvsAHgo1uBMsmbo929sFolE4jMPIHkUewAM4AAZr
        Cll3wPH6msUmm/v4qnFzHzVo5qP/NGhrBn/6qmjjqbqnRdzPVvBTEIRVFG69WOWNhXxkmiqqLbqgf86+
        oNfNDfxt9K0nbxoQ00jqs/Ss3jArkRRtHa97W14J+Ar7zNNff+ik5oHdFTVzrlP4caV+q9csAYCd8MtY
        JH4YZRILwAKAgCANEKAk6gd8T1xArID1s5/t+SeQI7bgf9jALhPLcbF0FMz+gIy4AwDg7/kckLHYFEvQ
        seJohHnkTMw003I2d76iZsSqd/hYfWbcQhnfmHRBYOmxhH+S3hyVqm8XnNXXiy7qg9iL+n3MBb0yxXPl
        D+b8Ppt/0bShX5T/ynP6dIIZ3TTdziXbL74KgKLNY/WP+v4O7cfMiXOKPukpP0suIC0TYN2MFuKHKb4g
        sAAKAwQoDEtnkAZqp0iD1QMY4giUi0JhBXsM9mUpOVYXY21BHjgBgHATxBQIYEL5rEACI/CbuAR6GQ8b
        IBHhgvZlyesc5LfpH6k3245WcZ/YG4LhuT4b9EnMITVYckFVFl7SX2Zd1O9iPEc+mmvmHJh5Bz3Xm/kD
        i0x/4tgd+l3PFSpvehx+GbhUD7ZLcKz/V41G6vNG7dQxZKBmLzILdBnad20ASRuPZZkB7AFwB/hy/Djj
        BSjYTtVC8ZYF+Jv6PABhm7lz5zoAABQ8OwALRtEABctmQSmExaVYZAqQwQ6AADDgEgYOHOisN8yzAwAP
        38Mmrg+bAPGAYdP2nVqwZLnCJ0Tr266j9ELLicI3Xg2SfnIP3Dwo9NHAJP09cpfqxZ8xEzUuq8qiy/p7
        7CW9OjVv5Y3pl/TveZdUd8llhaRcVsCKM06DyAdD1+vt/qv1x5CV+m2PFSoXlOQov5jPbFX4oZvqtw1U
        6MixWrpqjY4eP3FD5WebAVxTRAI14gIUhSWiSDIE3lE0Cs+IBQAJSqWqaC0cFgAYAAAmYH9yf6jfCnEH
        i1ABBL7jHNI+acQV6Yx9M/qVvGGTps0zj6UzD6n6wC9CpX2m/Rww/QQAqBSLesFY1puD1qvy1P1qmnhW
        bc00rnpLL+tLA4gPjDX+3ijo1Wk5Ixzr4/lmFlHiZbUxv9Nn42WFb72k7sln5bvomL4av1WfDF+nimFr
        9c6AZP2p7ypH+Y91SFRRn7l6qeEAVW3uJ/9eoQ7rAXo73p9ZBpZtBkjrErBAuoRJFQEC1k5sYBWJW8Dq
        EVI8qJ/Ckl0IGgAREKJwlpJD+SNHjnSCTEDiCgD25bmCPG8A9nG34xgqJA3atmu3Elcma2zMTDUJidBr
        bcY5NxIWuL9NgukdWKLnuy7TK4ZisTQs7sPwjaZzZ68axh1T++XnjFVemevXapX047LL+m7xZX0dbxjD
        SMW5l/Whi/wn7rKZCmbEKLi+AVG71cwLNHMGzbzB/pukiTulQSkX1G3labVbdERNZ+1R7Ymb9d24Taoc
        maLPRqzXP4es1d8GJjvn9Ih/olkAa66e+zFMXzb2c3z9yEkxjtujxp+Rv08PDDkCAFsrwC1YIBDZY51Q
        NErHslkcAqVC7SiPZeKI8F2Vy/8AYNCgQQ5AiAVIAaF+1+2wflwAsUR2nil49pzJaMzNojAyN2GJBo6e
        pP/faZSe8onSfQYIDxkmeKZLkl7ttUIVjMVheVjgv40lVhq5QV+NTlGdabvVaPZ++S48Iv+kU+q84rS6
        rj6rfhsuKjTlogZuvKiwTebdKLffunPqv/6c+q09q96rTqnXypPqvuy4ghIOqeOcXWo3a4d8p29X4ylb
        VS9qi6qP/1n5fwld7VB9cbPgVQmz5M1rDXrrmxYd1Ta4rzO2D5gJ9LimrL5yDABpGQGrtGkgYCB1xFph
        B4I/3APPFKJe4KpY6+MJ8GAQAGB7/Vy3ow5BrIAbIQ7J7gtWOGnOlRu4Yu0GJ18OGDRa77Q3zaQtpjtx
        wRMdl+g3PZY7IPjQWCJ0/HnEBlUbu1E1J2zWD5O3qEnMVkeBKLLDnJ3qPG+XusWlquei3eqTsEf9F+9V
        aOJe9TPvIfF71GPhbnWZn3pV+S2mbVPD6K2qZSyfY79lWOdZA0CU/kCzaXrpx0H6pGkX/egXpC6hQ50R
        PSye83aX7nOVAdI7OH4ZVgAMBIykgbgJ+zQQGAJWSMsARPY8PhYA8D0pJa7FdTtcBc8eYNl5Ukc7szi7
        QHCKXSZwJHCiaZK+uYjJ09Sid7jebhthVjybcpUZnjbW+Frvlfpg8BpVMUwAVdeZtNlRYLOp29RyxhUg
        +M/eqcC5uxRkFN3VgAFAoHQ+8zPftZ65Xd8bS/946Dq90WeVwzgl2pl0rsVslWk8Rn9oPECVmnd2RvAC
        +wxyAlnYCtaCvbJj8TmWBWTnRgMICwrqCQgPj3JVrM3zcQNkB9QXUDJZQFp3AUvgSmCVnG5UwapIobjZ
        lFABQ2DocFUJCNPbrcJVrsV4lWhuVic3WQRKK2X6BKBpgscXg5fr5e7LHdYgWCNds0Js8bhhFCJ39r2/
        2XQ9YZT9UuOh+nPTfvrcp6tj5e179FPvoaM0Onq68/ucB4EsbHWjtC6reskVF5CVk8DKbeHHAsGZ02eW
        lacmQAZB3ABbpA0GAQYgIMaAWXLrZcFAdA3tzlqQ4ACiz/BIxzJrBAxQlfb99H6rQXqnZZj+4jMoQ3m/
        RT9VatVL1dt2dyzbp3NPJ2dH2fhzonjSVjIWglUs/WYoPrN7ku8AIC7Aj7uyAJ+NGjXKUS71AyqBFJBs
        V5LdFtfQs2dPJ+3kuxulgpndCHe/x01ghbDDjt17nLF1YgdcBoUXYgi6bvHR6QnfUZ2DyhOWm4WzzL5Y
        N8rGn1O7yE2F56sLSO8m47sJBtMGgqSRxAG2qISSKfi4bgf19+rVy8kqspIOuqtsd7eDkvHHAIMYAqvN
        SFAw26DkrKRr7p5LVrfLdwbghNMCACWjUACA4gEDjGCrgc4KYD8J7sGmg57YtZxVheT19h4BAIpE1Atc
        rRufP3ToUEco/JANECtQ8ydVtEL5mXSQOsPNpIN5feM95fc8AgAM+1L0AQDWsgkEiQ2geMCBglE2Vg47
        WMEN8CTxnEwHPUU5eXEeHgEALhQat8rHulEw/QK4AQJBCkewAOMOZAMAxAqpYG6lg3mhhPz8DY8BACmf
        pXVr3TSbQu+MB0D/1AUoCMEYuAjENovmRTqYn4rKrd/2GABA8/QLoHxr2ZSPKfkCDj63zxagqsjAkRVi
        hLxOB3NLIXl9XI8BAJU8Aj5r2bwDAMYN8PHEB9QCqAnQTUT5F1dgpW9fMzCSz+lgXisvJ37PYwDAxfBk
        USgdwbpRLm6A/gBSQViAOMA+FQSAIGxDukgcQazgTQfdh4ZHAQBfj5Kt8gEAfQIwAwpG2ZSOYQO7sihM
        gMAOuAH7BBL3b0HB3tKjAIAlUxOwls07QR8tZVg331P3R8nME6Db2FUIBCkMsV9OTlC5nSHiUQCgLEyP
        IIq2AgBwCQz92vkAxAHQPNkA3zNXEcE9kA7aZeJuZ8Xl1LV5FABsWdjSurVuqn9YN0yAe7BrFjD3ABeB
        UCbGDbAdg0TECd5X5nfA4wBA0YfZP1i2FQBADAC927mCgIFsAMXbR9sDHDIGmABQ5ESTSOa38NbewuMA
        AK1j4ZbWUSRdw7SFURSiWkikDyCYVMKKpnwPSBACRuoGFI5yuknk1lZ1+mfvcQDgNGkGwbKtYOEoGetG
        +TAEIOF73ACTRQAOAjMQR5A2uvuAidtRse5ek0cCgEZQ++Rya92M9NFiTqoIC9AqRgWQRSNgAYRtKCCR
        DpIuwgh50STi7s32xO08EgBE8cwdQIF29XLmD5AC0i5ONoClkw4CAAI+vrfzCykoARbA4E0Hbww7jwSA
        LQtD6a7WTQaAdQMO5gMQB2D1pISuzzZg6Jh5A9mdM+CJlppb5+SRAOBiqe2jXMROG2OGMZ/bBhIGihhB
        JBi0TynD71NNzIk5A7l10z3puB4LAKybOMD1oRUoF9onRrCPnaFJBMawD5KGDfgboHibRDKHmscCgJwe
        P+/66FoAQHqHcin60DBKMAj923UG7HOE+dzbJHILA4BVxwjm0j4qnpiAOMA+TxCmYNCIYBAQIAwUARRv
        k8gtDABOnXzePh4ey0ZQMDOHqfbZGcg0ktjpZwABATj0E+blnIHMb7fnbeGxLoBbhWKxbiaZIta6mRcI
        vTNryD4Ywj7WhoUrrdiZyPk5Z8DzVH7tGXk0APDtFH6gdMRaN2ViqoW2Uxh/z2eMDcAEvCMEit4mkVuw
        DuB6yqRzKJ5IH7HWDQBwA8QCgISxAjvh1L7beMHbJJIxCDyaAThtUj7iACzbCtZNqZeBHxpFYQDmEAAQ
        GkUYBbRL2tFOhiugiOStCl4PBI8HANE8pV9L69a6aQsjS7DrFAIESsesM2iFJlHmFVg34B0cugUBgFWj
        SCzbil21FPdAsceuUwhY7BoEWDzrCMIAdnDIkx97k1/BosczADcGBdpVQFwtHGq3DaMwAVkB39M0QvpH
        GmgBQBzgnTt4CzIAp4yPr169uhP5MzporZw6AIM+zBgCAKSEzCPw8fFx5hrSR4jYPsHsLCaVX5aZV797
        SzAAXUE1a9Z0QFC/fn2H9u20MNwDyqdmgK9nm4YNGyo4ONhRPsUkegShf2+L2C3KAJw2NQHGAAAATMB4
        P3UAVhmjQYRVRlE+QOncufNV5UP9uA931xLMK8vzlN+5JRjA9WZR8GEYGABA+Yz528kkjRo1cpRPzIBr
        ACAo39sbeAvXAdI7dVJBUjoifUYMyQKIAwgKEQJAegdxHV7Lv8UrgTc6fYBAYEd0j7LtfAKaSCkeeQs/
        mTuaW84FZHRJdv1BAj1vI2jmirdb3DYAcP+SvVu63gEvAAo4HrwA8AKggN+BAn75/wc+ZWuLl5RnRwAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>